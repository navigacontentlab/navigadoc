<?xml version="1.0" encoding="UTF-8"?>
<!-- Infomaker Scandinavia AB -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
           targetNamespace="http://www.infomaker.se/idf/1.0" xmlns:idf="http://www.infomaker.se/idf/1.0">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
    <xs:import namespace="http://www.infomaker.se/newsml/1.0"
               schemaLocation="Infomaker-NewsML-Extensions_ver1.0.xsd"/>

    <!-- This is a modified version of Infomaker-Data-Format_1.0.xsd -->
    <!-- to include fields defined for NavigaDoc -->
    <!-- Block.Data map[string]string -->
    <xs:complexType name="Data">
        <xs:sequence>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Any element is allowed in data section</xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
    </xs:complexType>

    <!-- Block.Meta []*Block -->
    <xs:complexType name="BlockArray">
        <xs:sequence>
            <xs:element name="object" type="idf:Block" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Block -->
    <!-- see https://bitbucket.org/infomaker/doc-format/src/master/doc/document.go -->
    <xs:complexType mixed="true" name="Block">
        <xs:sequence>
            <xs:element name="data" type="idf:Data" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="links" type="idf:Links" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="meta" type="idf:Block" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="content" type="idf:Block" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="properties" type="idf:Properties" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="uuid" type="idf:notEmptyString"/>
        <xs:attribute name="uri" type="xs:anyURI"/>
        <xs:attribute name="url" type="xs:anyURI"/>
        <xs:attribute name="title" type="xs:string"/>
        <xs:attribute name="rel" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="contenttype" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="Link">
        <xs:complexContent>
            <xs:extension base="idf:Block">
                <xs:attribute name="type" type="idf:notEmptyString"/>
                <xs:attribute name="id" type="xs:NMTOKEN"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Links">
        <xs:sequence>
            <xs:element name="link" minOccurs="0" maxOccurs="unbounded" type="idf:Link"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Property">
        <xs:sequence>
            <xs:element name="parameters" type="idf:Data" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="idf:notEmptyString" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="Properties">
        <xs:sequence>
            <xs:element name="property" minOccurs="0" maxOccurs="unbounded" type="idf:Property"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Object">
        <xs:complexContent>
            <xs:extension base="idf:Block">
                <xs:attribute name="type" type="idf:notEmptyString" use="required"/>
                <xs:attribute name="id" use="required" type="xs:NMTOKEN"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType mixed="true" name="Element">
        <xs:sequence>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Any element is allowed in element section
                    </xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
        <xs:attribute name="type" use="required" type="idf:notEmptyString"/>
        <xs:attribute name="id" use="required" type="xs:NMTOKEN"/>
        <xs:attribute name="variation" type="idf:notEmptyString"/>
        <xs:attribute name="format" type="xs:string"/>
    </xs:complexType>


    <xs:element name="idf">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="idf:group"/>
            </xs:sequence>
            <xs:attribute ref="xml:lang" use="required"/>
            <xs:attribute name="dir"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="group">
        <xs:complexType>
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="idf:element"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" ref="idf:object"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="type" use="required" type="xs:NCName"/>
            <xs:attribute name="id" type="xs:NMTOKEN"/>
        </xs:complexType>
        <xs:unique name="UniqueElementId">
            <xs:selector xpath="idf:element"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>
    <xs:element name="element" type="idf:Element"/>
    <!-- NOTE! "object" should be the one specified in namespace "http://www.infomaker.se/newsml/1.0". This
        needs to be fixed as soon as we can validate this new format change in writer! -->
    <xs:element name="object" type="idf:Object"/>
    <xs:element name="data" type="idf:Data"/>
    <xs:element name="links" type="idf:Links"/>
    <xs:element name="link" type="idf:Link"/>
    <xs:simpleType name="notEmptyString">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value=".*[^\s].*"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
